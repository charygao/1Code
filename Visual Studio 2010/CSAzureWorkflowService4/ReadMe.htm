<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>ReadMe</title>
	<style type="text/css">
		H2
		{
			color: #003399;
			font-size: 125%;
		}
		
		H3
		{
			color: #0033DD;
			font-size: 110%;
		}
	</style>
</head>
<body>
	<h2>
		Overview</h2>
	<p>
		This sample demonstrates how to run a WCF Workflow Service on Windows Azure. It 
		uses Visual Studio 2010 and WF 4.</p>
	<p>
		While currently Windows Azure platform AppFabric does not contain a Workflow 
		Service component, you can run WCF Workflow Services directly in a Windows Azure 
		Web Role. By default, a Web Role runs under full trust, so it supports the 
		workflow environment.</p>
	<p>
		The workflow in this sample contains a single Receive 
        activity. It compares the 
		service operation&#39;s parameter&#39;s value with 20, and returns &quot;You&#39;ve entered a 
		small value.&quot; and &quot;You&#39;ve entered a large value.&quot;, respectively. The client 
		application invokes the Workflow Service twice, passing a value less than 20, 
		and a value grater than 20, respectively.</p>
	<h2>
		Prerequests</h2>
	<p>
		For this sample to work, you must install the Windows Azure SDK and the Windows
		Azure Tools for Visual Studio. This sample works on the local Compute Emulator
		(included in the Windows Azure SDK) and also in the Windows Azure cloud service.
		To run the sample in the cloud service, you must also have a valid Windows Azure
		account. More information about Windows Azure can be found here:
		<a href="http://msdn.microsoft.com/en-us/library/dd179367.aspx">
		http://msdn.microsoft.com/en-us/library/dd179367.aspx</a>. Please note that the Windows Azure SDK also has
		a number of its own pre-requisites (including IIS and SQL Server).</p>
	<h2>
		Running the Sample</h2>You must start Visual Studio in elevated (administrator) mode. Right-click on Visual
		Studio and then click Run as Administrator. This is required by the Windows Azure
		simulation environment.</p>
	<p>
		Configure the app.config file for the the Client application:<!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. --><endpoint address="http://127.0.0.1:81/ProcessDataWorkflowService.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProcessDataWorkflow"
                contract="WorkflowServiceReference.IProcessDataWorkflow" name="BasicHttpBinding_IProcessDataWorkflow" /><!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. --><endpoint address="http://127.0.0.1:81/ProcessDataWorkflowService.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProcessDataWorkflow"
                contract="WorkflowServiceReference.IProcessDataWorkflow" name="BasicHttpBinding_IProcessDataWorkflow" /><!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. --><endpoint address="http://127.0.0.1:81/ProcessDataWorkflowService.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProcessDataWorkflow"
                contract="WorkflowServiceReference.IProcessDataWorkflow" name="BasicHttpBinding_IProcessDataWorkflow" /><!-- Modify address if you host the workflow service in the cloud, or if your Development Fabric is not listening on port 81. --></p>
    <pre style="font-family: NSimSun; font-size: 13; color: black; background: white;"><span 
        style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--</span><span style="color:green;">&nbsp;Modify&nbsp;address&nbsp;if&nbsp;you&nbsp;host&nbsp;the&nbsp;Workflow&nbsp;Service&nbsp;in&nbsp;the&nbsp;cloud,&nbsp;or&nbsp;if&nbsp;your&nbsp;Compute&nbsp;Emulator&nbsp;is&nbsp;not&nbsp;listening&nbsp;on&nbsp;port&nbsp;81.&nbsp;</span><span 
        style="color:blue;">--&gt;</span>
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;</span><span style="color:#a31515;">endpoint</span><span 
        style="color:blue;">&nbsp;</span><span style="color:red;">address</span><span 
        style="color:blue;">=</span>&quot;<span style="color:blue;">http://127.0.0.1:81/ProcessDataWorkflowService.xamlx</span>&quot;
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:red;">binding</span><span 
        style="color:blue;">=</span>&quot;<span style="color:blue;">basicHttpBinding</span>&quot;<span 
        style="color:blue;">&nbsp;</span><span style="color:red;">bindingConfiguration</span><span 
        style="color:blue;">=</span>&quot;<span style="color:blue;">BasicHttpBinding_IService</span>&quot;
<span style="color:blue;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:red;">contract</span><span 
        style="color:blue;">=</span>&quot;<span style="color:blue;">WorkflowServiceReference.IService</span>&quot;<span 
        style="color:blue;">&nbsp;</span><span style="color:red;">name</span><span 
        style="color:blue;">=</span>&quot;<span style="color:blue;">BasicHttpBinding_IService</span>&quot;<span 
        style="color:blue;">&nbsp;/&gt;</span>
</pre>
	<p>
		Then run the CSAzureWorkflowService4 project in the Windows
		Azure local Compute Emulator or package and deploy the solution to the Windows Azure
		service. For more information about running Windows Azure applications locally or
		in the cloud please refer to the Windows Azure documentation at 
		<a href="http://msdn.microsoft.com/en-us/library/ee405484.aspx">
		http://msdn.microsoft.com/en-us/library/ee405484.aspx05484.aspx</a>.</p>
	<p>
		Finally, run the Client project to verify the workflow service works properly.</p>
	<h2>
		Description</h2>The sample solution contains 3 projects.</p>
	<h3>
		CSAzureWorkflowService4</h3>
	<p>
		The cloud service project. When testing in Compute Emulator, please make sure 
		to run this project instead of the WorkflowServiceWebRole project.</p>
	<h3>
		WorkflowServiceWebRole</h3>
	<p>
		The Web Role project. It is a normal ASP.NET project that hosts a WCF Workflow 
		Service. Hosting a Workflow Service in Windows Azure is the same as hosting in 
		IIS. The service contract is defined in the xamlx file.</p>
	<p>
		There&#39;s also nothing special about configuration. We add a default service 
        behavior to enable metadata.</p>
	<h3>
		Client</h3>
	<p>
		A console client application that invokes the WCF Workflow Service.w Service.</p>
</body>
</html>
